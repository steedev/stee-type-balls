{"version":3,"sources":["webpack://testtype/./src/App.ts","webpack://testtype/./src/Ball.ts","webpack://testtype/./src/Square.ts","webpack://testtype/webpack/bootstrap","webpack://testtype/webpack/runtime/define property getters","webpack://testtype/webpack/runtime/hasOwnProperty shorthand","webpack://testtype/webpack/runtime/make namespace object","webpack://testtype/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA8B;AACJ;AAC1B;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,qCAAqC,4CAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,wCAAwC;AAC7F,0DAA0D,wCAAwC;AAClG,wDAAwD,sCAAsC;AAC9F;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA,kCAAkC,0CAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0CAAI;AACtC;AACA,aAAa;AACb;AACA;AACA;AACA,4CAA4C,sEAAsE;AAClH;AACA,2BAA2B,OAAO;AAClC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,4BAA4B;AAC5B;AACA,iCAAiC;AACjC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD,qBAAqB,6BAA6B;AAClD,qBAAqB,6BAA6B;AAClD,qBAAqB;AACrB;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oCAAoC;AAC/E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mCAAmC,6CAA6C,EAAE;AAClF;AACA;AACA;AACA;AACA,mCAAmC,qDAAqD,EAAE;AAC1F;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACrcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;ACpBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,MAAM,EAAC;;;;;;;UC1BtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"game.bundle.js","sourcesContent":["import Square from './Square';\r\nimport Ball from './Ball';\r\nvar Game = /** @class */ (function () {\r\n    function Game() {\r\n        var _this = this;\r\n        // Create grid binary array\r\n        this.createGrid = function (gridSize) {\r\n            for (var i = 0; i < gridSize; i++) {\r\n                var rowLine = [];\r\n                for (var j = 0; j < gridSize; j++) {\r\n                    rowLine.push(0);\r\n                }\r\n                _this.grid.push(rowLine);\r\n            }\r\n        };\r\n        // Create game table\r\n        this.createGameTable = function () {\r\n            for (var i = 0; i < _this.grid.length; i++) {\r\n                var rowSquare = [];\r\n                var rowCells = [];\r\n                var _loop_1 = function (j) {\r\n                    var square = new Square(i, j);\r\n                    rowSquare.push(square);\r\n                    rowCells.push(i + \"x\" + j);\r\n                    // Append all squares to table <HTMLElement>\r\n                    var squareElement = document.getElementById('table');\r\n                    squareElement.appendChild(square.createSquare());\r\n                    // Events\r\n                    square.dv.onclick = function () { return _this.handleSquareClick(square); };\r\n                    square.dv.onmouseenter = function () { return _this.handleSquareEnter(square); };\r\n                    square.dv.onmouseout = function () { return _this.handleSquareOut(square); };\r\n                };\r\n                for (var j = 0; j < _this.grid[i].length; j++) {\r\n                    _loop_1(j);\r\n                }\r\n                _this.squaresTab.push(rowSquare);\r\n                _this.cells.push(rowCells);\r\n            }\r\n        };\r\n        // Create table for balls colors\r\n        this.createColorTable = function () {\r\n            _this.colorsTab = [];\r\n            for (var i = 0; i < _this.grid.length; i++) {\r\n                var rowLine = [];\r\n                for (var j = 0; j < _this.grid[i].length; j++) {\r\n                    rowLine.push('');\r\n                }\r\n                _this.colorsTab.push(rowLine);\r\n            }\r\n            _this.ballsTab.map(function (ball) {\r\n                // Push all colors balls from table to this.colorsTab\r\n                _this.colorsTab[ball.position.y][ball.position.x] = ball.color;\r\n            });\r\n            // console.log(this.colorsTab)\r\n        };\r\n        // Create 3 balls system\r\n        this.createBalls = function () {\r\n            var ballsTab = [];\r\n            for (var i = 0; i < 3; i++) {\r\n                var color = _this.randomColorBall();\r\n                var newBall = new Ball(color);\r\n                ballsTab.push(newBall);\r\n            }\r\n            // console.log(ballsTab)\r\n            return ballsTab;\r\n        };\r\n        // Create all balls system for Nav display\r\n        this.createAllBalls = function () {\r\n            var allBallsTab = [];\r\n            _this.colors.map(function (color) {\r\n                var newBall = new Ball(color);\r\n                allBallsTab.push(newBall);\r\n            });\r\n            return allBallsTab;\r\n        };\r\n        // Random color subsystem\r\n        this.randomColorBall = function () { return _this.colors[Math.floor(Math.random() * _this.colors.length)]; };\r\n        this.randomHexColor = function () {\r\n            for (var i = 0; i < 7; i++) {\r\n                var color = '#000000'.replace(/0/g, function () {\r\n                    return (~~(Math.random() * 16)).toString(16);\r\n                });\r\n                _this.colors.push(color);\r\n            }\r\n        };\r\n        this.randomPosition = function () {\r\n            var q = false;\r\n            var y = 0;\r\n            var x = 0;\r\n            while (!q) {\r\n                y = Math.floor(Math.random() * _this.grid.length);\r\n                x = Math.floor(Math.random() * _this.grid[y].length);\r\n                var actualSquare = _this.squaresTab[y][x];\r\n                if (actualSquare.empty == true) {\r\n                    actualSquare.empty = false;\r\n                    _this.grid[y][x] = 1;\r\n                    q = true;\r\n                }\r\n            }\r\n            return { y: y, x: x };\r\n        };\r\n        this.handleBallClick = function (currentBall) {\r\n            if (!_this.pause && _this.checkLocalNeighbors(currentBall)) {\r\n                // Dv properties because it's Ball instance Class\r\n                if (_this.highlight != null)\r\n                    _this.highlight.dv.classList.remove('highlight');\r\n                if (_this.highlight != currentBall) {\r\n                    _this.highlight = currentBall;\r\n                    _this.highlight.dv.classList.add('highlight');\r\n                }\r\n                else\r\n                    _this.highlight = null;\r\n            }\r\n        };\r\n        this.checkLocalNeighbors = function (currentBall) {\r\n            var returned = false;\r\n            var y = currentBall.position.y;\r\n            var x = currentBall.position.x;\r\n            // All false => can't turn\r\n            if (_this.handleEmptyChecker(y - 1, x))\r\n                returned = true;\r\n            if (_this.handleEmptyChecker(y, x + 1))\r\n                returned = true;\r\n            if (_this.handleEmptyChecker(y + 1, x))\r\n                returned = true;\r\n            if (_this.handleEmptyChecker(y, x - 1))\r\n                returned = true;\r\n            return returned;\r\n        };\r\n        this.handleEmptyChecker = function (y, x) {\r\n            try {\r\n                if (_this.grid[y][x] == 0)\r\n                    return true;\r\n                else\r\n                    return false;\r\n            }\r\n            catch (_a) {\r\n                return false;\r\n            }\r\n        };\r\n        this.handleSquareClick = function (currentSquare) {\r\n            // If it's a normal square\r\n            if (currentSquare.empty && _this.highlight != null && _this.canMove) {\r\n                var yH = _this.highlight.position.y;\r\n                var xH = _this.highlight.position.x;\r\n                // Unlight highlighted Ball\r\n                _this.squaresTab[yH][xH].empty = true;\r\n                _this.grid[yH][xH] = 0;\r\n                _this.highlight.dv.classList.remove('highlight');\r\n                _this.highlight.newPosition({ y: currentSquare.y, x: currentSquare.x });\r\n                // NEW POSITION...\r\n                var y = currentSquare.y;\r\n                var x = currentSquare.x;\r\n                _this.grid[y][x] = 1;\r\n                _this.squaresTab[y][x].empty = false;\r\n                _this.squaresTab[y][x].createBall(_this.highlight.dv);\r\n                // Create colors table\r\n                _this.createColorTable();\r\n                var isDeleted = _this.handleCheckDeleted(_this.highlight);\r\n                // Unlink highlighted ball => Func IF scope\r\n                _this.highlight = null;\r\n                _this.pause = true;\r\n                var gameOver = _this.handleCheckEnd();\r\n                if (gameOver != 2) {\r\n                    // Reset Path after TimeOut\r\n                    _this.handleResetPathTimeOut();\r\n                    _this.handleResetPath();\r\n                    _this.pause = false;\r\n                    if (!isDeleted) {\r\n                        // Create balls from Queue on table\r\n                        _this.ballsToTable(_this.ballsQueue);\r\n                        _this.ballsQueue.map(function (ball) {\r\n                            _this.colorsTab[ball.position.y][ball.position.x] = ball.color;\r\n                        });\r\n                        _this.ballsQueue.map(function (ball) {\r\n                            _this.handleCheckDeleted(ball);\r\n                        });\r\n                        //\r\n                        // Create next 3 ball and add to Queue\r\n                        _this.ballsToQueue(_this.createBalls());\r\n                        // Checking gameOver\r\n                        if (gameOver == 1)\r\n                            gameOver = _this.handleCheckEnd();\r\n                        if (gameOver == 2)\r\n                            _this.showScoreGame();\r\n                    }\r\n                }\r\n                else {\r\n                    // console.log('END')\r\n                    _this.showScoreGame();\r\n                }\r\n                // console.log(this.cells)\r\n                // console.log({ y, x })\r\n                // console.table(this.grid)\r\n                // console.log(this.squaresTab)\r\n            }\r\n        };\r\n        this.handleCheckDeleted = function (checkingBall) {\r\n            var ballsToDeleteTab = [];\r\n            // Check DIAGNOALLY [ FROM LEFT TO RIGHT DOWN ]\r\n            ballsToDeleteTab.push(_this.handleCheckDirection(-1, -1, checkingBall));\r\n            // Check UP DOWN\r\n            ballsToDeleteTab.push(_this.handleCheckDirection(-1, 0, checkingBall));\r\n            // Check DIAGNOALLY [ FROM LEFT TO RIGHT UP ]\r\n            ballsToDeleteTab.push(_this.handleCheckDirection(-1, 1, checkingBall));\r\n            // Check LEFT RIGHT\r\n            ballsToDeleteTab.push(_this.handleCheckDirection(0, -1, checkingBall));\r\n            var deleteHighlighted = false;\r\n            ballsToDeleteTab.forEach(function (tab) {\r\n                if (tab.length >= 4) {\r\n                    deleteHighlighted = true;\r\n                    tab.forEach(function (ball) {\r\n                        ball.remove = true;\r\n                    });\r\n                }\r\n            });\r\n            // Cehck if delete for\r\n            if (deleteHighlighted) {\r\n                checkingBall.remove = true;\r\n                // Clear grid\r\n                _this.ballsTab.forEach(function (ball) {\r\n                    if (ball.remove) {\r\n                        _this.grid[ball.position.y][ball.position.x] = 0;\r\n                        _this.squaresTab[ball.position.y][ball.position.x].clearSquare();\r\n                    }\r\n                });\r\n                for (var i = _this.ballsTab.length - 1; i >= 0; i--) {\r\n                    if (_this.ballsTab[i].remove) {\r\n                        _this.ballsTab.splice(i, 1);\r\n                        _this.points++;\r\n                    }\r\n                }\r\n                document.getElementById(\"points\").innerText = \"Points: \" + _this.points;\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n        };\r\n        this.handleCheckDirection = function (posYChange, posXChange, checkingBall) {\r\n            var colorCheck = _this.colorsTab[checkingBall.position.y][checkingBall.position.x];\r\n            var go = true;\r\n            var y = checkingBall.position.y;\r\n            var x = checkingBall.position.x;\r\n            var ballsToDelete = [];\r\n            while (go) {\r\n                y += posYChange;\r\n                x += posXChange;\r\n                try {\r\n                    if (_this.colorsTab[y][x] != colorCheck)\r\n                        go = false;\r\n                    else {\r\n                        _this.ballsTab.forEach(function (ball) {\r\n                            if (ball.position.y == y && ball.position.x == x)\r\n                                ballsToDelete.push(ball);\r\n                        });\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    // console.log(err)\r\n                    go = false;\r\n                }\r\n            }\r\n            go = true;\r\n            y = checkingBall.position.y;\r\n            x = checkingBall.position.x;\r\n            while (go) {\r\n                y -= posYChange;\r\n                x -= posXChange;\r\n                try {\r\n                    if (_this.colorsTab[y][x] != colorCheck)\r\n                        go = false;\r\n                    else {\r\n                        _this.ballsTab.forEach(function (ball) {\r\n                            if (ball.position.y == y && ball.position.x == x)\r\n                                ballsToDelete.push(ball);\r\n                        });\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    // console.log(err)\r\n                    go = false;\r\n                }\r\n            }\r\n            // console.log(ballsToDelete)\r\n            return ballsToDelete;\r\n        };\r\n        // Checking empty Squares\r\n        this.handleCheckEnd = function () {\r\n            var over = 0;\r\n            var count = 0;\r\n            _this.squaresTab.map(function (row) {\r\n                row.map(function (square) {\r\n                    if (square.empty)\r\n                        count++;\r\n                });\r\n            });\r\n            if (count == 3)\r\n                over = 1;\r\n            else if (count < 3)\r\n                over = 2;\r\n            return over;\r\n        };\r\n        // GameOver Score to Firestore and display best games\r\n        this.showScoreGame = function () {\r\n            document.getElementById('game').remove();\r\n            document.getElementById('showScore').style.display = 'flex';\r\n            document.getElementById('showScore').innerText = \"Firebase Scores: \" + _this.points;\r\n        };\r\n        this.handleSquareEnter = function (currentSquare) {\r\n            if (currentSquare.empty && _this.highlight != null) {\r\n                _this.fastFinder(currentSquare.y, currentSquare.x);\r\n            }\r\n        };\r\n        this.handleSquareOut = function (currentSquare) {\r\n            if (currentSquare.empty && _this.highlight != null) {\r\n                _this.handleResetPath();\r\n            }\r\n        };\r\n        this.handleResetPath = function () {\r\n            _this.path.map(function (path) {\r\n                document.getElementById(path).classList.remove('finder');\r\n                document.getElementById(path).classList.remove('wrongFinder');\r\n            });\r\n        };\r\n        this.handleResetPathTimeOut = function () {\r\n            _this.handleResetPath();\r\n            _this.colorPath('correctFinder');\r\n            setTimeout(function () {\r\n                _this.path.map(function (path) {\r\n                    document.getElementById(path).classList.remove('correctFinder');\r\n                });\r\n            }, 400);\r\n        };\r\n        this.fastFinder = function (row, col) {\r\n            var startPos = { row: _this.highlight.position.y, col: _this.highlight.position.x };\r\n            var queue = [];\r\n            var parentForCell = { key: '', cell: '' };\r\n            // parentForCell[startPos] = { key: startPos, cell: undefined }\r\n            queue.push(startPos);\r\n            while (queue.length > 0) {\r\n                var _a = queue.shift(), row_1 = _a.row, col_1 = _a.col;\r\n                var currentPos = row_1 + \"x\" + col_1;\r\n                var currentCell = _this.cells[row_1][col_1];\r\n                var neightbors = [\r\n                    { row: row_1 - 1, col: col_1 },\r\n                    { row: row_1, col: col_1 + 1 },\r\n                    { row: row_1 + 1, col: col_1 },\r\n                    { row: row_1, col: col_1 - 1 }\r\n                ];\r\n                for (var i = 0; i < neightbors.length; i++) {\r\n                    var nRow = neightbors[i].row;\r\n                    var nCol = neightbors[i].col;\r\n                    if (nRow < 0 || nRow > _this.cells.length - 1) {\r\n                        continue;\r\n                    }\r\n                    if (nCol < 0 || nCol > _this.cells[nRow].length - 1) {\r\n                        continue;\r\n                    }\r\n                    if (_this.grid[nRow][nCol] === 1) {\r\n                        continue;\r\n                    }\r\n                    var key = nRow + \"x\" + nCol;\r\n                    if (key in parentForCell || key === startPos.row + \"x\" + startPos.col) {\r\n                        continue;\r\n                    }\r\n                    parentForCell[key] = { key: currentPos, cell: currentCell };\r\n                    queue.push(neightbors[i]);\r\n                }\r\n                // console.log(neightbors)\r\n                // console.log({ currentPos, currentCell })\r\n            }\r\n            // console.log(parentForCell)\r\n            _this.path = [];\r\n            var current = row + \"x\" + col;\r\n            // console.log(current)\r\n            _this.path.push(current);\r\n            while (current !== startPos.row + \"x\" + startPos.col) {\r\n                var cell = parentForCell[current];\r\n                // Key not from normal Table\r\n                if (cell !== undefined) {\r\n                    _this.canMove = true;\r\n                    _this.path.push(cell.key);\r\n                    current = cell.key;\r\n                }\r\n                else {\r\n                    // Stupid mistake makes nice system :)\r\n                    _this.handleResetPath();\r\n                    _this.colorPath('wrongFinder');\r\n                    console.log('ehh, wrong way..');\r\n                    // console.log(this.path)\r\n                    _this.canMove = false;\r\n                    break; // with this break\r\n                }\r\n            }\r\n            _this.colorPath('finder');\r\n        };\r\n        this.colorPath = function (color) {\r\n            for (var i = 0; i < _this.path.length; i++) {\r\n                document.getElementById(_this.path[i]).classList.add(color);\r\n            }\r\n        };\r\n        this.grid = [];\r\n        this.squaresTab = [];\r\n        this.ballsTab = [];\r\n        this.colors = [];\r\n        this.ballsQueue = [];\r\n        this.highlight = null;\r\n        this.cells = [];\r\n        this.path = [];\r\n        this.canMove = true;\r\n        this.colorsTab = [];\r\n        this.pause = false;\r\n        this.points = 0;\r\n        // Create grid\r\n        this.createGrid(9);\r\n        // Create game table\r\n        this.createGameTable();\r\n        // Random Hex colors for Balls\r\n        this.randomHexColor();\r\n        // Rendering balls and queue\r\n        this.ballsToTable(this.createBalls());\r\n        this.ballsToQueue(this.createBalls());\r\n        // Display all actuals colors\r\n        this.displayAllColors(this.createAllBalls());\r\n        // Logs...\r\n        // console.log(this.grid)\r\n        // console.log(this.squaresTab)\r\n        // console.log(this.colors)\r\n    }\r\n    // Balls on table\r\n    Game.prototype.ballsToTable = function (balls) {\r\n        var _this = this;\r\n        balls.forEach(function (ball) {\r\n            var position = _this.randomPosition();\r\n            ball.newPosition(position);\r\n            _this.ballsTab.push(ball);\r\n            _this.squaresTab[ball.position.y][ball.position.x].createBall(ball.createBall());\r\n            ball.dv.onclick = function () { return _this.handleBallClick(ball); };\r\n        });\r\n    };\r\n    Game.prototype.ballsToQueue = function (balls) {\r\n        this.ballsQueue = balls;\r\n        var queue = document.getElementById('queue');\r\n        queue.innerHTML = '';\r\n        balls.map(function (ball) { return queue.appendChild(ball.createBall()); });\r\n    };\r\n    Game.prototype.displayAllColors = function (balls) {\r\n        var displayColors = document.getElementById('allColors');\r\n        displayColors.innerHTML = '';\r\n        balls.map(function (ball) { return displayColors.appendChild(ball.createBall()); });\r\n    };\r\n    return Game;\r\n}());\r\nnew Game();\r\n","var Ball = /** @class */ (function () {\r\n    function Ball(color) {\r\n        var _this = this;\r\n        this.createBall = function () {\r\n            var dv = document.createElement('div');\r\n            dv.className = 'ball';\r\n            dv.style.background = _this.color;\r\n            _this.dv = dv;\r\n            return dv;\r\n        };\r\n        this.newPosition = function (position) {\r\n            _this.position = position;\r\n        };\r\n        this.position = null;\r\n        this.color = color;\r\n        this.remove = false;\r\n        this.dv = null;\r\n    }\r\n    return Ball;\r\n}());\r\nexport default Ball;\r\n","var Square = /** @class */ (function () {\r\n    function Square(y, x) {\r\n        var _this = this;\r\n        this.createSquare = function () {\r\n            var dv = document.createElement('div');\r\n            dv.className = 'square';\r\n            dv.id = _this.y + \"x\" + _this.x;\r\n            dv.style.left = _this.x * 62 + \"px\";\r\n            dv.style.top = _this.y * 62 + \"px\";\r\n            _this.dv = dv;\r\n            return dv;\r\n        };\r\n        this.createBall = function (ball) {\r\n            _this.dv.appendChild(ball);\r\n        };\r\n        this.clearSquare = function () {\r\n            _this.dv.innerText = '';\r\n            _this.empty = true;\r\n        };\r\n        this.y = y;\r\n        this.x = x;\r\n        this.empty = true;\r\n        this.dv = null;\r\n    }\r\n    return Square;\r\n}());\r\nexport default Square;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/App.ts\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}